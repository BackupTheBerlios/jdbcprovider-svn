## ---------------------------- Common database checks sql

# ping connection
# result: ignored, we just make sure there's no exception
check.connection = SELECT 1 FROM "WIKI_PAGE" WHERE 2=1

# any number of initialization checks
# result: ignored, we just make sure there's no exception
check."WIKI_PAGE" = SELECT COUNT(*) FROM "WIKI_PAGE"
check."WIKI_ATT"achments = SELECT COUNT(*) FROM "WIKI_ATT"

## ---------------------------- Wiki page sql
# check to see if a given page exists
# result: must be non-empty
page.exists = SELECT "VERSION" FROM "WIKI_PAGE" WHERE "NAME" = ? LIMIT 1

# check to see if a given page exists at a given version
# (to support the VersioningProvider interface)
# result: must be non-empty
page.versionExists = SELECT "VERSION" FROM "WIKI_PAGE" WHERE "NAME" = ? AND "VERSION" = ?

# get the text content for the latest version of the given page
# result: string(text)
page.getCurrent = SELECT "CONTENT" FROM "WIKI_PAGE" WHERE "NAME" = ? ORDER BY "VERSION" DESC LIMIT 1

# get the text content for the given version of the given page
# result: string(text)
page.getVersion = SELECT "CONTENT" FROM "WIKI_PAGE" WHERE "NAME" = ? AND "VERSION" = ?

# 2007-02-12 MT:  added CHANGE_NOTE
# insert a new record into the current pages table
# input: string, int, timestamp, string, string, string
page.insertPage = INSERT INTO "WIKI_PAGE" ("NAME", "VERSION", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE", "CONTENT") VALUES (?, ?, ?, ?, ?, ?)

# 2007-02-12 MT:  added CHANGE_NOTE
# update a versioned page, for a continuation editt
# input: timestamp, string, string, string
page.updatePage = UPDATE "WIKI_PAGE" SET "CHANGE_TIME"=?, "CHANGE_BY"=?, "CHANGE_NOTE"=?, "CONTENT"=? WHERE "NAME" =? AND "VERSION"=?

# 2007-02-12 MT:  added CHANGE_NOTE
# get info for current page
# input: string
# result: int(version), timestamp(CHANGE_TIME-when), string(CHANGE_TIME-by), string(Changenote)
page.getCurrentInfo = SELECT "VERSION", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE" FROM "WIKI_PAGE" WHERE "NAME" = ? ORDER BY "VERSION" DESC LIMIT 1

# 2007-02-12 MT:  added CHANGE_NOTE
# get info for version page
# input: string, int
# result: int(version), timestamp(CHANGE_TIME-when), string(CHANGE_TIME-by), string(Changenote)
page.getVersionInfo = SELECT "VERSION", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE" FROM "WIKI_PAGE" WHERE "NAME" = ? AND "VERSION" = ?

# 2007-02-12 MT:  added CHANGE_NOTE
# get latest version of every page
# result: string(name), int(version), timestamp(CHANGE_TIME-when), string(CHANGE_TIME-by), strong(Changenote)
page.getAllPages = SELECT "NAME", "VERSION", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE" FROM "WIKI_PAGE",(SELECT MAX("WIKI_PAGE"."VERSION") AS PV FROM "WIKI_PAGE" GROUP BY "NAME") AS "_WIKI_PAGE" WHERE "WIKI_PAGE"."VERSION" = "_WIKI_PAGE".PV

# 2007-02-12 MT:  added CHANGE_NOTE
# get latest version of every page CHANGE_TIME since the given date
# input: timestamp
# result: string(name), int(version), timestamp(CHANGE_TIME-when), string(CHANGE_TIME-by)
page.getAllPagesSince = SELECT "NAME", "VERSION", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE" FROM "WIKI_PAGE",(SELECT MAX("WIKI_PAGE"."VERSION") AS PV FROM "WIKI_PAGE" GROUP BY "NAME") AS "_WIKI_PAGE" WHERE "WIKI_PAGE"."VERSION" = "_WIKI_PAGE".PV AND "WIKI_PAGE"."CHANGE_TIME" > ?

# get number of pages (with unique names)
# result: int(count)
page.getPageCount = SELECT COUNT(DISTINCT "NAME") FROM "WIKI_PAGE"

# 2007-02-12 MT:  added CHANGE_NOTE
# get info for all versions of a given page, sorted by descending version num
# input: string
# result: int(version), timestamp(CHANGE_TIME-when), string(CHANGE_TIME-by), string(Changenote)
page.getVersions = SELECT "VERSION", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE" FROM "WIKI_PAGE" WHERE "NAME" = ? ORDER BY "VERSION" DESC

# delete given version of given page
# input: string, int
page.deleteVersion = DELETE FROM "WIKI_PAGE" WHERE "NAME" = ? AND "VERSION" = ?

# delete all versions of given page
# input: string
page.deleteVersions = DELETE FROM "WIKI_PAGE" WHERE "NAME" = ?

# rename current version given page
# input: string, string
page.move = UPDATE "WIKI_PAGE" SET "NAME" = ? WHERE "NAME" = ?

## ---------------------------- Wiki attachment sql

# update a versioned page, for a continuation edit

# get number of attachment pages
attachment.getCount = SELECT COUNT(*) FROM "WIKI_ATT"

# 2007-02-12 MT:  added CHANGE_NOTE
# insert a new attachment (possible a new version of an existing attachment
attachment.insert = INSERT INTO "WIKI_ATT" ("PAGENAME", "FILENAME", "VERSION", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE", "DATA", "LENGTH") VALUES (?, ?, ?, ?, ?, ?, ?, ?)

# get attachment data
attachment.getData = SELECT "DATA" FROM "WIKI_ATT" WHERE "PAGENAME" = ? AND "FILENAME" = ? AND "VERSION" = ?

# 2007-02-12 MT:  added CHANGE_NOTE
# get list of attachments for a given page grouped by filename in descending order of version number
attachment.getList = SELECT "LENGTH", "FILENAME", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE", "VERSION" FROM "WIKI_ATT" WHERE "PAGENAME" = ? ORDER BY "FILENAME", "VERSION" DESC

# 2007-02-12 MT:  added CHANGE_NOTE
# get list of attachment changed since the given date
attachment.getChanged = SELECT "PAGENAME", "FILENAME", "LENGTH", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE", "VERSION" FROM "WIKI_ATT" WHERE "CHANGE_TIME" > ? ORDER BY "CHANGE_TIME" DESC

# 2007-02-12 MT:  added CHANGE_NOTE
# get info for a given page/attachment/version
attachment.getInfo = SELECT "LENGTH", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE" FROM "WIKI_ATT" WHERE "PAGENAME" = ? AND "FILENAME" = ? AND "VERSION" = ?

# get latest version for the given page/attachment
attachment.getLatestVersion = SELECT MAX("VERSION") FROM "WIKI_ATT" WHERE "PAGENAME" = ? AND "FILENAME" = ?

# 2007-02-12 MT:  added CHANGE_NOTE
# get info for each version in descending order of version number
attachment.getVersions = SELECT "LENGTH", "CHANGE_TIME", "CHANGE_BY", "CHANGE_NOTE", "VERSION" FROM "WIKI_ATT" WHERE "PAGENAME" = ? AND "FILENAME" = ? ORDER BY "VERSION" DESC

# delete a given page/attachment/version
attachment.deleteVersion = DELETE FROM "WIKI_ATT" WHERE "PAGENAME" = ? AND "FILENAME" = ? AND "VERSION" = ?

# delete a given page/attachment (all versions)
attachment.delete = DELETE FROM "WIKI_ATT" WHERE "PAGENAME" = ? AND "FILENAME" = ?

# move an attachment from one page to another page
attachment.move = UPDATE "WIKI_ATT" SET "PAGENAME" = ? WHERE "PAGENAME" = ?


